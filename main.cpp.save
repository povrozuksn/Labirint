#include "TXLib.h"

struct Personage
{
    int x;
    int y;
    HDC image;
    int w;
    int h;
    int vx;
    int vy;
    bool visible;

    void draw()
    {
        if (visible)
        txTransparentBlt(txDC(), x, y, w, h, image, 0, 0, TX_WHITE);
    }
};

struct Barrier
{
    int x;
    int y;
    int w;
    int h;
    COLORREF color;

    void draw()
    {
        txSetColor(color);
        txSetFillColor(color);
        txRectangle(x, y, x+w, y+h);
    }
};

struct Button
{
    int x;
    int y;
    int w;
    int h;
    const char* text;

    void draw()
    {
        txSetColor (TX_BLACK);
        txSetFillColor (TX_BLACK);
        txRectangle(x+3, y+3, x+w+3, y+h+3);
        txSetFillColor (TX_WHITE);
        txRectangle(x, y, x+w, y+h);
        txDrawText(x, y, x+w, y+h, text);
    }

    void change()
    {
        txSetColor (TX_WHITE);
        txSetFillColor (TX_BLACK);
        txRectangle(x, y, x+w, y+h);
        txDrawText(x, y, x+w, y+h, text);
    }

    bool mouse_over()
    {
        if(txMouseX()>x && txMouseX()<x+w && txMouseY()>y && txMouseY()<y+h)
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    bool mouse_click()
    {
        if( txMouseButtons() == 1  &&
            txMouseX() > x && txMouseX() < x+w &&
            txMouseY() > y && txMouseY() < y+h)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
};

int main()
{
txCreateWindow (800, 600);

    HDC fon = txLoadImage("Pictures/labirint1.bmp");
    HDC menu = txLoadImage("Pictures/fon.bmp");

    Personage hero = {80, 5, txLoadImage("Pictures/ãåðîé.bmp"), 40, 50, 10, 10, true};
    int x_hero_old;
    int y_hero_old;

    Personage enemy1 = {743, 743, txLoadImage("Pictures/âðàã.bmp"), 45, 50, 10, 0};
    Personage enemy2 = { 15, 320, enemy1.image, 45, 50, 0, 10};
    Personage enemy3 = {743, 250, enemy1.image, 45, 50, 5, 0};

    Button btn_start = {300,  50, 200, 50, "ÑÒÀÐÒ"};
    Button btn_about = {300, 150, 200, 50, "ÎÁ ÈÃÐÅ"};
    Button btn_exit =  {300, 250, 200, 50, "ÂÛÕÎÄ"};

    int level = 1;

    string PAGE = "Menu";

    while(true)
    {
        txSetColor (TX_WHITE);
        txSetFillColor (TX_WHITE);
        txClear();
        txBegin();
        if(GetAsyncKeyState(VK_ESCAPE))
        {
            PAGE = "Menu";
        }
        if(PAGE == "Menu")
        {
            txBitBlt(txDC(), 0, 0, 800, 600, menu);
            //Êíîïêà ÑÒÀÐÒ
            btn_start.draw();
            if(btn_start.mouse_over())
            {
                btn_start.change();
            }
            if(btn_start.mouse_click())
            {
                PAGE = "Game";
            }
            //Êíîïêà ÎÁ ÈÃÐÅ
            btn_about.draw();
            if(btn_about.mouse_over())
            {
                btn_about.change();
            }
            if(btn_about.mouse_click())
            {
                PAGE = "";
            }
            //Êíîïêà ÂÛÕÎÄ
            btn_exit.draw();
            if(btn_exit.mouse_over())
            {
                btn_exit.change();
            }
            if(btn_exit.mouse_click())
            {
                txDisableAutoPause();
                return 0;
            }
        }

        if(PAGE == "Game")
        {
            txBitBlt(txDC(), 0, 0, 800, 600, fon);

            hero.draw();
            enemy1.draw();
            enemy2.draw();
            enemy3.draw();

            x_hero_old = hero.x;
            y_hero_old = hero.y;

            if(GetAsyncKeyState(VK_RIGHT))
            {
                hero.x += hero.vx;
            }
            if(GetAsyncKeyState(VK_LEFT))
            {
                hero.x -= hero.vx;
            }
            if(GetAsyncKeyState(VK_UP))
            {
                hero.y -= hero.vy;
            }
            if(GetAsyncKeyState(VK_DOWN))
            {
                hero.y += hero.vy;
            }

            //Óñëîâèå íåïðîõîäèìîñòè ïðåïÿäñòâèÿ ïî öâåòó
            for(int x=hero.x; x<hero.x+hero.w; x+=10)
            {
                for(int y=hero.y; y<hero.y+hero.h; y+=10)
                {
                    if(txGetPixel(x, y) == RGB(255, 0, 0))
                    {
                        hero.x = x_hero_old;
                        hero.y = y_hero_old;
                    }
                }
            }

            char str[100];
            sprintf(str, "Óðîâåíü -  %d", level);
            txSetColor(TX_BLACK);
            txDrawText(300, 5, 500, 20, str);

            enemy1.x += enemy1.vx;
            if(enemy1.x<0 || enemy1.x>800) enemy1.vx = - enemy1.vx;
            enemy3.x += enemy3.vx;
            if(enemy3.x<0 || enemy3.x>800) enemy3.vx = - enemy3.vx;
            enemy2.y += enemy2.vy;
            if(enemy2.y<0 || enemy2.y>600) enemy2.vy = - enemy2.vy;

            if((txGetPixel(hero.x, hero.y+hero.h) == RGB(255, 255, 0)) && (level == 1))
            {
                fon = txLoadImage("Pictures/labirint2.bmp");
                hero.x = 15;
                hero.y = 180;
                level = 2;
            }
            if((txGetPixel(hero.x, hero.y+hero.h) == RGB(255, 255, 0)) && (level == 2))
            {
                fon = txLoadImage("Pictures/labirint3.bmp");
                hero.x = 600;
                hero.y = 60;
                level = 3;
            }
            if((txGetPixel(hero.x, hero.y+hero.h) == RGB(255, 255, 0)) && (level == 3))
            {
                fon = txLoadImage("Pictures/fin.bmp");
                hero.visible = false;
            }
        }

        txEnd();
        txSleep(10);
    }

    txDeleteDC(fon);
    txDeleteDC(enemy1.image);

txTextCursor (false);
return 0;
}

